{
  "rules": {
    "connectivity_test": {
      ".read": true,
      ".write": false
    },

    "test_connectivity": {
      ".read": true
    },

    "song_collections": {
      ".read": true, 
      ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
      
      "$collectionId": {
        ".read": "data.child('metadata/access_level').val() == 'public' || auth != null",
        ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
        
        "metadata": {
          ".validate": "newData.hasChildren(['name', 'description', 'access_level', 'status', 'created_at', 'created_by'])"
        },
        "songs": {
          "$songId": {
            ".validate": "newData.hasChildren(['song_number', 'song_title', 'verses'])"
          }
        }
      }
    },

    "song_collection": {
      ".read": true,
      ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
      
      "$collectionId": {
        ".read": "data.child('metadata/access_level').val() == 'public' || auth != null",
        
        "metadata": {
          ".validate": "newData.hasChildren(['name', 'description', 'access_level', 'status', 'created_at', 'created_by'])"
        },
        "songs": {
          "$songId": {
            ".validate": "newData.hasChildren(['song_number', 'song_title', 'verses'])"
          }
        }
      }
    },

    "songs": {
      ".read": true,
      ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
      "$songId": {
        ".validate": "newData.hasChildren(['song_number', 'song_title', 'verses']) && newData.child('song_number').isString() && newData.child('song_title').isString() && newData.child('song_title').val().length <= 200 && newData.child('verses').hasChildren()"
      }
    },

    "users": {
      ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
      "$uid": {
        ".read": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_admin'",
        ".write": "$uid === auth.uid || (root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
        "role": {
          ".write": "(root.child('users').child(auth.uid).child('role').val() == 'admin' && newData.val().matches(/^(user|premium)$/)) || (root.child('users').child(auth.uid).child('role').val() == 'super_admin')"
        },
        "permissions": {
          ".write": "root.child('users').child(auth.uid).child('role').val() == 'super_admin'"
        },
        "favorites": {
          ".read": "$uid === auth.uid",
          ".write": "$uid === auth.uid"
        },
        "premium": {
          ".read": "$uid === auth.uid",
          ".write": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_admin'"
        }
      }
    },

    "song_reports": {
      ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
      "$reportId": {
        ".write": "auth != null && (!data.exists() || root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
        ".validate": "newData.hasChildren(['songNumber', 'issueType', 'description', 'reporterEmail']) && newData.child('description').val().length >= 10 && newData.child('description').val().length <= 1000 && newData.child('reporterEmail').val() == auth.token.email"
      }
    },

    "collection_analytics": {
      ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'super_admin'"
    },
    
    "user_collection_preferences": {
      "$uid": {
        ".read": "$uid === auth.uid",
        ".write": "$uid === auth.uid",
        ".validate": "newData.hasChildren() && (!newData.hasChild('favorite_collections') || newData.child('favorite_collections').hasChildren()) && (!newData.hasChild('default_collection') || newData.child('default_collection').isString())"
      }
    },

    "bible": {
      "bookmarks": {
        "$uid": {
          ".read": "$uid === auth.uid",
          ".write": "$uid === auth.uid"
        }
      },
      "highlights": {
        "$uid": {
          ".read": "$uid === auth.uid",
          ".write": "$uid === auth.uid"
        }
      },
      "notes": {
        "$uid": {
          ".read": "$uid === auth.uid",
          ".write": "$uid === auth.uid"
        }
      },
      "preferences": {
        "$uid": {
          ".read": "$uid === auth.uid",
          ".write": "$uid === auth.uid"
        }
      },
      "chat": {
        "conversations": {
          "$uid": {
            ".read": "$uid === auth.uid",
            ".write": "$uid === auth.uid && auth != null",
            ".indexOn": ["updatedAt"]
          }
        },
        "settings": {
          "$uid": {
            ".read": "$uid === auth.uid",
            ".write": "$uid === auth.uid && auth != null"
          }
        }
      }
    },

    "system": {
      "global_ai_tokens": {
        ".read": "auth != null",
        ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
        "$provider": {
          ".validate": "newData.hasChildren(['token', 'provider', 'updated_at', 'updated_by', 'expires_at', 'is_active'])"
        }
      },
      "ai_usage": {
        "daily": {
          "$uid": {
            ".read": "$uid === auth.uid || auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
            ".write": "$uid === auth.uid && auth != null",
            ".indexOn": ["date"]
          }
        },
        "hourly": {
          "$uid": {
            ".read": "$uid === auth.uid || auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
            ".write": "$uid === auth.uid && auth != null"
          }
        },
        "limits": {
          ".read": "auth != null",
          ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_admin')"
        }
      }
    },

    "announcements": {
      ".read": true,
      ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'super_admin' || auth.token.email == 'haw33inc@gmail.com' || auth.token.email == 'heary_aldy@hotmail.com' || auth.token.email == 'heary@hopetv.asia')",
      "$announcementId": {
        ".validate": "newData.hasChildren(['title', 'content', 'created_at', 'created_by', 'status']) && newData.child('title').isString() && newData.child('title').val().length <= 200 && newData.child('content').isString() && newData.child('content').val().length <= 2000"
      }
    },

    "app_config": {
      "announcements": {
        ".read": true,
        ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'super_admin' || auth.token.email == 'haw33inc@gmail.com' || auth.token.email == 'heary_aldy@hotmail.com' || auth.token.email == 'heary@hopetv.asia')",
        "$announcementId": {
          ".validate": "newData.hasChildren(['title', 'content', 'created_at', 'created_by', 'status']) && newData.child('title').isString() && newData.child('title').val().length <= 200 && newData.child('content').isString() && newData.child('content').val().length <= 2000"
        }
      },
      "global_version": {
        ".read": true,
        ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'super_admin'"
      }
    },

    "app_global_version": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'super_admin'"
    },

    "app_update_stats": {
      ".read": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'super_admin'",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'super_admin'"
    },

    "app_update_log": {
      ".read": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'super_admin'",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'super_admin'",
      ".indexOn": ["timestamp"]
    },

    "app_force_update": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'super_admin'"
    },

    "song_collection_last_updated": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'super_admin'"
    },

    "admin_config": {
      ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'super_admin')",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'super_admin'"
    },

    ".read": false,
    ".write": false
  }
}
